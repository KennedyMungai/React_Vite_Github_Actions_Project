name: Another Website Deployment Workflow 

on:
    push:
        branches:
            - main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Cache Dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.np
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
            - name: Lint Code
              run: npm run lint
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Cache Dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
            - name: Test Code
              continue-on-error: true
              id: run-test
              run: npm run test
            - name: Upload Test Report
              if: failure() && steps.run-test.outcome == 'failure'
              uses: actions/upload-artifact@v3
              with:
                name: test-report
                path: test.json
    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Cache Dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
            - name: Build Website
              id: build-website
              run: npm run build
            - name: Upload Artifacts
              uses: actions/upload-artifact@v3
              with:
                name: dist-files
                path: dist
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Get Build Artifacts
              uses: actions/download-artifact@v3
              with:
                name: dist-files
            - name: Output Contents
              run: ls
            - name: Deploy
              run: echo "Deploying..."
    report:
      needs: [lint, deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: Output Information
          run: |
            echo "Something went wrong"
            echo "${{ github }}"